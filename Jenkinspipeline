node{

def mavenHome = tool name: "maven 3.8.6"
echo "jenkins build url is: ${env.JENKINS_URL}"
echo "node name is: ${env.NODE_NAME}"
echo "job name is: ${env.JOB_NAME}"
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

try{
slackNotifications('STARTED')
stage('CheckOutCode'){
git branch: 'development', credentialsId: 'd6a1ed46-5fa2-444d-bff3-6e44da4e8c43', url: 'https://github.com/Seemaa-Patel-Org/maven-web-application.git'

}
stage ('Build'){
sh "${mavenHome}/bin/mvn clean package"
}
/*
stage('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn clean sonar:sonar"
}

stage('UpladArtifactIntoArtifactoryRepo'){
sh "${mavenHome}/bin/mvn clean deploy"
}
stage('DeployAppIntoTomcatServer'){
sshagent(['5526ab32-4a27-433d-b4ec-cb7fd5338fab']){
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.0.18:/opt/apache-tomcat-9.0.65/webapps"
}
}
*/
}//try block closing
catch (e){
slackNotifications(currentBuild.result)
throw e
}
finally{
slackNotifications(currentBuild.result)
}

}//Node closing

//Code snippet for sending slack notification
 
def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (colorName: colorCode, message: summary, channel:"#walmart")

}
